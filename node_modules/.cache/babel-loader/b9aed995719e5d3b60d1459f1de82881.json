{"ast":null,"code":"var _jsxFileName = \"/Users/Michael/learning react/covid-19-tracker/covid-19-tracker/src/components/Chart/Chart.js\";\nimport React, { useState, useEffect } from 'react';\nimport { getDailyData } from '../../Api/apiIndex';\nimport { Line, Bar } from 'react-chartjs-2';\nimport styles from './Chart.module.css';\n\nconst Chart = ({\n  data,\n  country\n}) => {\n  const [dailyData, setDailyData] = useState([]);\n  useEffect(() => {\n    const fetchAPI = async () => {\n      setDailyData((await getDailyData()));\n    };\n\n    fetchAPI();\n  });\n  const lineChart = dailyData[0] ? /*#__PURE__*/React.createElement(Line, {\n    data: {\n      labels: dailyData.map(({\n        date\n      }) => date),\n      datasets: [{\n        data: dailyData.map(data => data.confirmed),\n        label: 'Infected',\n        borderColor: '#3333ff',\n        fill: true\n      }, {\n        data: dailyData.map(data => data.deaths),\n        label: 'Deaths',\n        borderColor: 'red',\n        backgroundColor: 'rgba(255, 0, 0, 0.5)',\n        fill: true\n      }]\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 3\n    }\n  }) : null;\n  const barChart = data.confirmed ? /*#__PURE__*/React.createElement(Bar, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 36\n    }\n  }) : null;\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 9\n    }\n  }, lineChart);\n};\n\nexport default Chart;","map":{"version":3,"sources":["/Users/Michael/learning react/covid-19-tracker/covid-19-tracker/src/components/Chart/Chart.js"],"names":["React","useState","useEffect","getDailyData","Line","Bar","styles","Chart","data","country","dailyData","setDailyData","fetchAPI","lineChart","labels","map","date","datasets","confirmed","label","borderColor","fill","deaths","backgroundColor","barChart","container"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,YAAT,QAA6B,oBAA7B;AACA,SAASC,IAAT,EAAeC,GAAf,QAA0B,iBAA1B;AACA,OAAOC,MAAP,MAAmB,oBAAnB;;AAEA,MAAMC,KAAK,GAAG,CAAC;AAAEC,EAAAA,IAAF;AAAQC,EAAAA;AAAR,CAAD,KAAuB;AACpC,QAAM,CAAEC,SAAF,EAAaC,YAAb,IAA8BV,QAAQ,CAAC,EAAD,CAA5C;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACf,UAAMU,QAAQ,GAAG,YAAY;AAC5BD,MAAAA,YAAY,EAAC,MAAMR,YAAY,EAAnB,EAAZ;AACA,KAFD;;AAGAS,IAAAA,QAAQ;AACR,GALQ,CAAT;AAOA,QAAMC,SAAS,GAAGH,SAAS,CAAC,CAAD,CAAT,gBACjB,oBAAC,IAAD;AACC,IAAA,IAAI,EAAE;AACLI,MAAAA,MAAM,EAAEJ,SAAS,CAACK,GAAV,CAAc,CAAC;AAAEC,QAAAA;AAAF,OAAD,KAAcA,IAA5B,CADH;AAELC,MAAAA,QAAQ,EAAE,CACT;AACCT,QAAAA,IAAI,EAAEE,SAAS,CAACK,GAAV,CAAeP,IAAD,IAAUA,IAAI,CAACU,SAA7B,CADP;AAECC,QAAAA,KAAK,EAAE,UAFR;AAGCC,QAAAA,WAAW,EAAE,SAHd;AAICC,QAAAA,IAAI,EAAE;AAJP,OADS,EAOT;AACCb,QAAAA,IAAI,EAAEE,SAAS,CAACK,GAAV,CAAeP,IAAD,IAAUA,IAAI,CAACc,MAA7B,CADP;AAECH,QAAAA,KAAK,EAAE,QAFR;AAGCC,QAAAA,WAAW,EAAE,KAHd;AAICG,QAAAA,eAAe,EAAE,sBAJlB;AAKCF,QAAAA,IAAI,EAAE;AALP,OAPS;AAFL,KADP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADiB,GAqBd,IArBJ;AAuBA,QAAMG,QAAQ,GAAGhB,IAAI,CAACU,SAAL,gBAAiB,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAjB,GAA2B,IAA5C;AAEA,sBAAO;AAAK,IAAA,SAAS,EAAEZ,MAAM,CAACmB,SAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAmCZ,SAAnC,CAAP;AACA,CApCD;;AAqCA,eAAeN,KAAf","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { getDailyData } from '../../Api/apiIndex';\nimport { Line, Bar } from 'react-chartjs-2';\nimport styles from './Chart.module.css';\n\nconst Chart = ({ data, country }) => {\n\tconst [ dailyData, setDailyData ] = useState([]);\n\n\tuseEffect(() => {\n\t\tconst fetchAPI = async () => {\n\t\t\tsetDailyData(await getDailyData());\n\t\t};\n\t\tfetchAPI();\n\t});\n\n\tconst lineChart = dailyData[0] ? (\n\t\t<Line\n\t\t\tdata={{\n\t\t\t\tlabels: dailyData.map(({ date }) => date),\n\t\t\t\tdatasets: [\n\t\t\t\t\t{\n\t\t\t\t\t\tdata: dailyData.map((data) => data.confirmed),\n\t\t\t\t\t\tlabel: 'Infected',\n\t\t\t\t\t\tborderColor: '#3333ff',\n\t\t\t\t\t\tfill: true\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tdata: dailyData.map((data) => data.deaths),\n\t\t\t\t\t\tlabel: 'Deaths',\n\t\t\t\t\t\tborderColor: 'red',\n\t\t\t\t\t\tbackgroundColor: 'rgba(255, 0, 0, 0.5)',\n\t\t\t\t\t\tfill: true\n\t\t\t\t\t}\n\t\t\t\t]\n\t\t\t}}\n\t\t/>\n\t) : null;\n\n\tconst barChart = data.confirmed ? <Bar /> : null;\n\n\treturn <div className={styles.container}>{lineChart}</div>;\n};\nexport default Chart;\n"]},"metadata":{},"sourceType":"module"}