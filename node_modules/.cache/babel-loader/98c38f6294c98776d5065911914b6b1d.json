{"ast":null,"code":"var _jsxFileName = \"/Users/Michael/learning react/covid-19-tracker/covid-19-tracker/src/components/Chart/Chart.js\";\nimport React, { useState, useEffect } from 'react';\nimport { getDailyData } from '../../Api/apiIndex';\nimport { Line, Bar } from 'react-chartjs-2';\nimport styles from './Chart.module.css';\n\nconst Chart = ({\n  data: {\n    confirmed,\n    recovered,\n    deaths\n  },\n  country\n}) => {\n  const [dailyData, setDailyData] = useState([]);\n  useEffect(() => {\n    const fetchAPI = async () => {\n      setDailyData((await getDailyData()));\n    };\n\n    fetchAPI();\n  });\n  const lineChart = dailyData[0] ? /*#__PURE__*/React.createElement(Line, {\n    data: {\n      labels: dailyData.map(({\n        date\n      }) => date),\n      datasets: [{\n        data: dailyData.map(data => data.confirmed),\n        label: 'Infected',\n        borderColor: '#3333ff',\n        fill: true\n      }, {\n        data: dailyData.map(data => data.deaths),\n        label: 'Deaths',\n        borderColor: 'red',\n        backgroundColor: 'rgba(255, 0, 0, 0.5)',\n        fill: true\n      }]\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 3\n    }\n  }) : null;\n  const barChart = confirmed ? /*#__PURE__*/React.createElement(Bar, {\n    data: {\n      labels: ['Infected', 'Recovered', 'Deaths'],\n      datasets: [{\n        label: 'People',\n        backgroundColor: ['rgba(0, 0, 255, 0.5', 'rgba(0, 255, 0, 0.5', 'rgba(255, 0, 0, 0.5'],\n        data: [confirmed, recovered, deaths]\n      }]\n    },\n    options: {\n      legend: {\n        display: false\n      },\n      title: {\n        display: true,\n        text: `Current State in ${country}`\n      }\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 3\n    }\n  }) : null;\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 9\n    }\n  }, lineChart);\n};\n\nexport default Chart;","map":{"version":3,"sources":["/Users/Michael/learning react/covid-19-tracker/covid-19-tracker/src/components/Chart/Chart.js"],"names":["React","useState","useEffect","getDailyData","Line","Bar","styles","Chart","data","confirmed","recovered","deaths","country","dailyData","setDailyData","fetchAPI","lineChart","labels","map","date","datasets","label","borderColor","fill","backgroundColor","barChart","legend","display","title","text","container"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,YAAT,QAA6B,oBAA7B;AACA,SAASC,IAAT,EAAeC,GAAf,QAA0B,iBAA1B;AACA,OAAOC,MAAP,MAAmB,oBAAnB;;AAEA,MAAMC,KAAK,GAAG,CAAC;AAAEC,EAAAA,IAAI,EAAE;AAAEC,IAAAA,SAAF;AAAaC,IAAAA,SAAb;AAAwBC,IAAAA;AAAxB,GAAR;AAA0CC,EAAAA;AAA1C,CAAD,KAAyD;AACtE,QAAM,CAAEC,SAAF,EAAaC,YAAb,IAA8Bb,QAAQ,CAAC,EAAD,CAA5C;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACf,UAAMa,QAAQ,GAAG,YAAY;AAC5BD,MAAAA,YAAY,EAAC,MAAMX,YAAY,EAAnB,EAAZ;AACA,KAFD;;AAGAY,IAAAA,QAAQ;AACR,GALQ,CAAT;AAOA,QAAMC,SAAS,GAAGH,SAAS,CAAC,CAAD,CAAT,gBACjB,oBAAC,IAAD;AACC,IAAA,IAAI,EAAE;AACLI,MAAAA,MAAM,EAAEJ,SAAS,CAACK,GAAV,CAAc,CAAC;AAAEC,QAAAA;AAAF,OAAD,KAAcA,IAA5B,CADH;AAELC,MAAAA,QAAQ,EAAE,CACT;AACCZ,QAAAA,IAAI,EAAEK,SAAS,CAACK,GAAV,CAAeV,IAAD,IAAUA,IAAI,CAACC,SAA7B,CADP;AAECY,QAAAA,KAAK,EAAE,UAFR;AAGCC,QAAAA,WAAW,EAAE,SAHd;AAICC,QAAAA,IAAI,EAAE;AAJP,OADS,EAOT;AACCf,QAAAA,IAAI,EAAEK,SAAS,CAACK,GAAV,CAAeV,IAAD,IAAUA,IAAI,CAACG,MAA7B,CADP;AAECU,QAAAA,KAAK,EAAE,QAFR;AAGCC,QAAAA,WAAW,EAAE,KAHd;AAICE,QAAAA,eAAe,EAAE,sBAJlB;AAKCD,QAAAA,IAAI,EAAE;AALP,OAPS;AAFL,KADP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADiB,GAqBd,IArBJ;AAuBA,QAAME,QAAQ,GAAGhB,SAAS,gBACzB,oBAAC,GAAD;AACC,IAAA,IAAI,EAAE;AACLQ,MAAAA,MAAM,EAAE,CAAE,UAAF,EAAc,WAAd,EAA2B,QAA3B,CADH;AAELG,MAAAA,QAAQ,EAAE,CACT;AACCC,QAAAA,KAAK,EAAE,QADR;AAECG,QAAAA,eAAe,EAAE,CAAE,qBAAF,EAAyB,qBAAzB,EAAgD,qBAAhD,CAFlB;AAGChB,QAAAA,IAAI,EAAE,CAAEC,SAAF,EAAaC,SAAb,EAAwBC,MAAxB;AAHP,OADS;AAFL,KADP;AAWC,IAAA,OAAO,EAAE;AAAEe,MAAAA,MAAM,EAAE;AAAEC,QAAAA,OAAO,EAAE;AAAX,OAAV;AAA8BC,MAAAA,KAAK,EAAE;AAAED,QAAAA,OAAO,EAAE,IAAX;AAAiBE,QAAAA,IAAI,EAAG,oBAAmBjB,OAAQ;AAAnD;AAArC,KAXV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADyB,GActB,IAdJ;AAgBA,sBAAO;AAAK,IAAA,SAAS,EAAEN,MAAM,CAACwB,SAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAmCd,SAAnC,CAAP;AACA,CAlDD;;AAmDA,eAAeT,KAAf","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { getDailyData } from '../../Api/apiIndex';\nimport { Line, Bar } from 'react-chartjs-2';\nimport styles from './Chart.module.css';\n\nconst Chart = ({ data: { confirmed, recovered, deaths }, country }) => {\n\tconst [ dailyData, setDailyData ] = useState([]);\n\n\tuseEffect(() => {\n\t\tconst fetchAPI = async () => {\n\t\t\tsetDailyData(await getDailyData());\n\t\t};\n\t\tfetchAPI();\n\t});\n\n\tconst lineChart = dailyData[0] ? (\n\t\t<Line\n\t\t\tdata={{\n\t\t\t\tlabels: dailyData.map(({ date }) => date),\n\t\t\t\tdatasets: [\n\t\t\t\t\t{\n\t\t\t\t\t\tdata: dailyData.map((data) => data.confirmed),\n\t\t\t\t\t\tlabel: 'Infected',\n\t\t\t\t\t\tborderColor: '#3333ff',\n\t\t\t\t\t\tfill: true\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tdata: dailyData.map((data) => data.deaths),\n\t\t\t\t\t\tlabel: 'Deaths',\n\t\t\t\t\t\tborderColor: 'red',\n\t\t\t\t\t\tbackgroundColor: 'rgba(255, 0, 0, 0.5)',\n\t\t\t\t\t\tfill: true\n\t\t\t\t\t}\n\t\t\t\t]\n\t\t\t}}\n\t\t/>\n\t) : null;\n\n\tconst barChart = confirmed ? (\n\t\t<Bar\n\t\t\tdata={{\n\t\t\t\tlabels: [ 'Infected', 'Recovered', 'Deaths' ],\n\t\t\t\tdatasets: [\n\t\t\t\t\t{\n\t\t\t\t\t\tlabel: 'People',\n\t\t\t\t\t\tbackgroundColor: [ 'rgba(0, 0, 255, 0.5', 'rgba(0, 255, 0, 0.5', 'rgba(255, 0, 0, 0.5' ],\n\t\t\t\t\t\tdata: [ confirmed, recovered, deaths ]\n\t\t\t\t\t}\n\t\t\t\t]\n\t\t\t}}\n\t\t\toptions={{ legend: { display: false }, title: { display: true, text: `Current State in ${country}` } }}\n\t\t/>\n\t) : null;\n\n\treturn <div className={styles.container}>{lineChart}</div>;\n};\nexport default Chart;\n"]},"metadata":{},"sourceType":"module"}